<%
var log = new Log('sample.todo.API');

function encodeBase64(str) {
    var bytes = new Packages.java.lang.String(str).getBytes();
    var converted = Packages.org.apache.commons.codec.binary.Base64.encodeBase64(bytes);
    return String(new Packages.java.lang.String(converted));
}

function decodeBase64(str) {
    var bytes = new Packages.java.lang.String(str).getBytes();
    var converted = Packages.org.apache.commons.codec.binary.Base64.decodeBase64(bytes);
    return String(new Packages.java.lang.String(converted));
}

var user = session.get('user');
if (user) {
    var id;
    var registry = user.registry;
    var space = '/_system/governance/users/' + user.info.username;

    if (request.getMethod() == 'POST') {
        // http post to /todo-app/api/todos with URL encoded parameters
        // handles adding new todo items
        // id : string - unique id for the item
        // title : string - text to be shown in the ui
        // completed : boolean - is item in "strikethrough" state

        id = request.getParameter('id');
        if (!registry.exists(space)) {
            registry.put(space, {
                collection: true
            });
            log.info('user space was created for user : ' + user.info.username + ' at ' + space);
        }
        var todo = {
            "id": id,
            "title": request.getParameter('title'),
            "completed": (request.getParameter('completed')=='true')
        };
        registry.put(space + "/" + id, {
            name: id,
            content: encodeBase64(stringify(todo))
        });

        log.info('saved todo for user : ' + user.info.username + ' at ' + space + '/' + id);

    } else if (request.getMethod() == 'GET') {
        // http get to /todo-app/api/todos , no parameters
        // handles retrieval of current items

        if (registry.exists(space)) {
            var todos = [];
            var todoPaths = registry.get(space).content;
            for (var i = 0; i < todoPaths.length; i++) {
                var todoPath = todoPaths[i];
                var todoContent = registry.get(todoPath).content.toString();
                todos.push(parse(decodeBase64(todoContent)));
            }

            print(todos);
        } else {
            print([]);
        }
    }
} else {
    response.sendError(401, "please log in first");
}

%>